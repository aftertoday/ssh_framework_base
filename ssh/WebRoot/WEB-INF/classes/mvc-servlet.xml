<?xml version="1.0" encoding="UTF-8" ?>
	<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:mvc="http://www.springframework.org/schema/mvc"    
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd   
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.1.xsd  
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">   

	<!-- 启用MVC注解 -->
	<mvc:annotation-driven />
	<!-- 定义spring 扫描包 -->
	<context:component-scan base-package="com.yong.web" />
	
	<!-- JSTL 视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	</bean>
	
	<!-- velocity 解析器配置 -->
	<!--
    <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">  
           <property name="resourceLoaderPath">  
               <value>/WEB-INF/</value>  
           </property>  
           <property name="velocityProperties">  
               <props>  
                   <prop key="input.encoding">utf-8</prop>  
                   <prop key="output.encoding">utf-8</prop>  
               </props>  
           </property>  
     </bean>  
     -->
     
     <!-- velocity view resolver -->
     <!--
     <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">  
        <property name="suffix">  
            <value>.html</value>  
        </property>  
        <property name="contentType" >  
                 <value>text/html;charset=utf-8</value>  
        </property>  
        <property name="exposeSessionAttributes">  
	        <value>true</value>  
	    </property> 
    </bean>
	-->
	  
	 <!-- 拦截器 -->  
	 <!-- 
    <mvc:interceptors>  
        <bean class="com.yong.interceptor.BaseInterceptor" />  
    </mvc:interceptors>        
     -->
     
    <!-- 注解配置 -->
    <!-- 默认的注解映射的支持  不能自动初始化  DefaultAnnotationHandlerMapping 和  AnnotationMethodHandlerAdapter 两个bean-->  
    <!-- 
    <mvc:annotation-driven />  
     -->
     <!-- 手动初始化 两个bean 否则junit 单元测试 无法获取 上下文  用于 -->
   
    <!--
    <bean id="defaultAnnotationHandlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
    <bean id="annotationMethodHandlerAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
    -->
    
    <!-- 对静态资源文件的访问    web.xml <url-pattern>*.htm</url-pattern> 配置为 *.htm 时 无须配置   否则请求不能被拦截-->  
    <!-- 
    	<mvc:default-servlet-handler/>
    -->
    
    <!-- 普通文件上传配置 -->
    <!-- 
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="maxUploadSize" value="500000" />  
    </bean>  
     -->
    
    <!-- 文件上传配置   为集成 kingeditor 文件上传功能  重写spring 文件上传配置，使用自己的实现类 --> 
    <!-- 拦截 /upload_json.html 结尾的请求 为文件上传 -->
    <!-- 
	   <bean id="multipartResolver" class="com.yong.config.MyCommonsMultipartResolver">  
	        <property name="maxUploadSize" value="500000" />  
	   </bean>  
    -->
</beans>
